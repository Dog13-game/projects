


import telebot
from telebot import types

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7421404546:AAHklHP0Ai5VaG9aMRkgPZt7nndIJWhdlH8"
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–Ω–∏–∫ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –æ–¥–∏–Ω–∏—Ü—å –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è
CONVERSIONS = {
    '–æ–±\'—î–º': {'—á–∞—à–∫–∞': 240, '—Å—Ç–æ–ª–æ–≤–∞ –ª–æ–∂–∫–∞': 15, '—á–∞–π–Ω–∞ –ª–æ–∂–∫–∞': 5, '—Å–∫–ª—è–Ω–∫–∞': 250},
    '–≤–∞–≥–∞': {'–∫—ñ–ª–æ–≥—Ä–∞–º': 1000, '–≥—Ä–∞–º': 1, '—Ñ—É–Ω—Ç': 453.592, '—É–Ω—Ü—ñ—è': 28.3495}
}

# –§—É–Ω–∫—Ü—ñ—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
def convert_units(value, unit, category):
    if category in CONVERSIONS and unit in CONVERSIONS[category]:
        return value * CONVERSIONS[category][unit]
    return None

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    markup.add(types.KeyboardButton("–û–±'—î–º"), types.KeyboardButton("–í–∞–≥–∞"))
    bot.send_message(
        message.chat.id,
        "üçΩÔ∏è –ü—Ä–∏–≤—ñ—Ç! –Ø –≤–∞—à –∫—É–ª—ñ–Ω–∞—Ä–Ω–∏–π –±–æ—Ç üßë‚Äçüç≥.\n"
        "–û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∞–±–æ –≤–≤–µ–¥–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ:\n"
        "`<–∫—ñ–ª—å–∫—ñ—Å—Ç—å> <–æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è>`\n"
        "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `2 —á–∞—à–∫–∞`\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:\n- –û–±'—î–º: —á–∞—à–∫–∞, —Å—Ç–æ–ª–æ–≤–∞ –ª–æ–∂–∫–∞, —á–∞–π–Ω–∞ –ª–æ–∂–∫–∞, —Å–∫–ª—è–Ω–∫–∞\n- –í–∞–≥–∞: –∫—ñ–ª–æ–≥—Ä–∞–º, –≥—Ä–∞–º, —Ñ—É–Ω—Ç, —É–Ω—Ü—ñ—è",
        parse_mode="Markdown",
        reply_markup=markup
    )

# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
@bot.message_handler(func=lambda message: message.text in ["–û–±'—î–º", "–í–∞–≥–∞"])
def handle_category(message):
    category = message.text.lower()
    units = ", ".join(CONVERSIONS[category].keys())
    bot.send_message(
        message.chat.id,
        f"–í–∏ –æ–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: {category}\n"
        f"–î–æ—Å—Ç—É–ø–Ω—ñ –æ–¥–∏–Ω–∏—Ü—ñ: {units}\n"
        "–í–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ: `<–∫—ñ–ª—å–∫—ñ—Å—Ç—å> <–æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è>`\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `2 —á–∞—à–∫–∞`",
        parse_mode="Markdown"
    )

# –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        parts = message.text.lower().split()
        value = float(parts[0])
        unit = ' '.join(parts[1:])

        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è
        category = next((cat for cat, units in CONVERSIONS.items() if unit in units), None)

        if category:
            result = convert_units(value, unit, category)
            bot.send_message(message.chat.id, f"‚úÖ {value} {unit} –¥–æ—Ä—ñ–≤–Ω—é—î {result:.2f} –º–ª/–≥.")
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
    except (ValueError, IndexError):
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞! –í–≤–µ–¥—ñ—Ç—å —É —Ñ–æ—Ä–º–∞—Ç—ñ: `<–∫—ñ–ª—å–∫—ñ—Å—Ç—å> <–æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è>`.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
